<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.route.mapper.BRouteMapper">
    
    <resultMap type="BRoute" id="BRouteResult">
        <result property="routeId"    column="route_id"    />
        <result property="routeName"    column="route_name"    />
        <result property="routeContent"    column="route_content"    />
    </resultMap>

    <sql id="selectBRouteVo">
        select route_id, route_name, route_content from b_route
    </sql>

    <select id="selectBRouteList" parameterType="BRoute" resultMap="BRouteResult">
        <include refid="selectBRouteVo"/>
        <where>  
            <if test="routeName != null  and routeName != ''"> and route_name like concat('%', #{routeName}, '%')</if>
            <if test="routeContent != null  and routeContent != ''"> and route_content = #{routeContent}</if>
        </where>
    </select>
    
    <select id="selectBRouteByRouteId" parameterType="Long" resultMap="BRouteResult">
        <include refid="selectBRouteVo"/>
        where route_id = #{routeId}
    </select>
        
    <insert id="insertBRoute" parameterType="BRoute" useGeneratedKeys="true" keyProperty="routeId">
        insert into b_route
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="routeName != null">route_name,</if>
            <if test="routeContent != null">route_content,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="routeName != null">#{routeName},</if>
            <if test="routeContent != null">#{routeContent},</if>
         </trim>
    </insert>

    <update id="updateBRoute" parameterType="BRoute">
        update b_route
        <trim prefix="SET" suffixOverrides=",">
            <if test="routeName != null">route_name = #{routeName},</if>
            <if test="routeContent != null">route_content = #{routeContent},</if>
        </trim>
        where route_id = #{routeId}
    </update>

    <delete id="deleteBRouteByRouteId" parameterType="Long">
        delete from b_route where route_id = #{routeId}
    </delete>

    <delete id="deleteBRouteByRouteIds" parameterType="String">
        delete from b_route where route_id in 
        <foreach item="routeId" collection="array" open="(" separator="," close=")">
            #{routeId}
        </foreach>
    </delete>
</mapper>